<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
	    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd" 
    default-autowire="byName" default-lazy-init="true">
	<!-- 使用MethodInvokingJobDetailFactoryBean，任务类可以不实现Job接口，通过targetMethod指定调用方法-->
	
	<!--<bean id="taskJob" class="com.rkylin.wheatfield.task.TestTask"/>
	<bean id="jobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="group" value="job_work"/>
		<property name="name" value="job_work_name"/>
		false表示等上一个任务执行完后再开启新的任务
		<property name="concurrent" value="false"/>
		<property name="targetObject">
			<ref bean="taskJob"/>
		</property>
		<property name="targetMethod">
			<value>run</value>
		</property>
	</bean>-->
	
	<bean id="taskJob" class="com.rkylin.wheatfield.Test.PaymentAccountServiceTest"/>
	<bean id="jobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="group" value="job_work"/>
		<property name="name" value="job_work_name"/>
		<!--false表示等上一个任务执行完后再开启新的任务-->
		<property name="concurrent" value="false"/>
		<property name="targetObject">
			<ref bean="taskJob"/>
		</property>
		<property name="targetMethod">
			<value>rechargeRun</value>
		</property>
	</bean>
	 
	<!-- 调度触发器 -->
	<bean id="myTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="name" value="work_default_name"/>
		<property name="group" value="work_default"/>
		<property name="jobDetail">
			<ref bean="jobDetail" />
		</property>
		<property name="cronExpression">
			<value>0/50 * * * * ?</value>
		</property>
	</bean>
	 
	<!-- 调度工厂 -->
	<bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
		<list>
			<ref bean="myTrigger"/>
		</list>
		</property>
	</bean>
</beans>