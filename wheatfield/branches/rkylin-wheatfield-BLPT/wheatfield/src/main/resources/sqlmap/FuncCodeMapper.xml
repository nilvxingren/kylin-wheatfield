<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="FuncCodeMapper">
	<resultMap id="BaseResultMap" type="FuncCode">
	  <result column="FUNC_ID" jdbcType="INTEGER" property="funcId" />
	  <result column="FUNC_CODE" jdbcType="VARCHAR" property="funcCode" />
	  <result column="FUNC_NAME" jdbcType="VARCHAR" property="funcName" />
	  <result column="CREATED_TIME" jdbcType="TIMESTAMP" property="createdTime" />
	  <result column="UPDATED_TIME" jdbcType="TIMESTAMP" property="updatedTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <trim prefix="(" prefixOverrides="and" suffix=")">
      <if test="funcId != null" >
	      and FUNC_ID = #{funcId,jdbcType=INTEGER}
	    </if>
      <if test="funcCode != null" >
	      and FUNC_CODE = #{funcCode,jdbcType=VARCHAR}
	    </if>
      <if test="funcName != null" >
	      and FUNC_NAME = #{funcName,jdbcType=VARCHAR}
	    </if>
      <if test="createdTime != null" >
	      and CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP}
	    </if>
      <if test="updatedTime != null" >
	      and UPDATED_TIME = #{updatedTime,jdbcType=TIMESTAMP}
	    </if>
	  </trim>
    </where>
  </sql>
  <sql id="Example_Set_Clause">
    <set>
      <trim suffixOverrides=",">
      <if test="funcId != null">
        FUNC_ID = #{funcId,jdbcType=INTEGER},
      </if>
      <if test="funcCode != null">
        FUNC_CODE = #{funcCode,jdbcType=VARCHAR},
      </if>
      <if test="funcName != null">
        FUNC_NAME = #{funcName,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        UPDATED_TIME = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      </trim>
    </set>
  </sql>
  <sql id="Base_Column_List">
    FUNC_ID,
    FUNC_CODE,
    FUNC_NAME,
    CREATED_TIME,
    UPDATED_TIME,
  </sql>
  <sql id="Base_Set_Clause">
    <set>
      <trim suffixOverrides=",">
        FUNC_ID = #{funcId,jdbcType=INTEGER},
        FUNC_CODE = #{funcCode,jdbcType=VARCHAR},
        FUNC_NAME = #{funcName,jdbcType=VARCHAR},
        CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP},
        UPDATED_TIME = #{updatedTime,jdbcType=TIMESTAMP},
      </trim>
    </set>
  </sql>
  <sql id="Selective_Column_List">
    <if test="funcId != null">
      FUNC_ID,
    </if>
    <if test="funcCode != null">
      FUNC_CODE,
    </if>
    <if test="funcName != null">
      FUNC_NAME,
    </if>
    <if test="createdTime != null">
      CREATED_TIME,
    </if>
    <if test="updatedTime != null">
      UPDATED_TIME,
    </if>
  </sql>
	<sql id="Base_Value_List">
    #{funcId,jdbcType=INTEGER},
    #{funcCode,jdbcType=VARCHAR},
    #{funcName,jdbcType=VARCHAR},
    #{createdTime,jdbcType=TIMESTAMP},
    #{updatedTime,jdbcType=TIMESTAMP},
	</sql>
  <sql id="Selective_Value_List">
    <if test="funcId != null">
      #{funcId,jdbcType=INTEGER},
    </if>
    <if test="funcCode != null">
      #{funcCode,jdbcType=VARCHAR},
    </if>
    <if test="funcName != null">
      #{funcName,jdbcType=VARCHAR},
    </if>
    <if test="createdTime != null">
      #{createdTime,jdbcType=TIMESTAMP},
    </if>
    <if test="updatedTime != null">
      #{updatedTime,jdbcType=TIMESTAMP},
    </if>
  </sql>
  
  <select id="selectByExample" parameterType="FuncCodeQuery" resultMap="BaseResultMap">
    select
    <trim suffixOverrides=",">
      <include refid="Base_Column_List" />
    </trim>
    from FUNC_CODE
    <include refid="Example_Where_Clause" />
    <!-- order by CREATE_DATE -->
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <trim suffixOverrides=",">
      <include refid="Base_Column_List" />
    </trim>
    from FUNC_CODE
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from FUNC_CODE
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="FuncCodeQuery">
    delete from FUNC_CODE
    <include refid="Example_Where_Clause" />
  </delete>
  <insert id="insert" parameterType="FuncCode">
    insert into FUNC_CODE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <include refid="Base_Column_List"/>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <include refid="Base_Value_List"/>
    </trim>
  </insert>
  <insert id="insertSelective" parameterType="FuncCode">
    insert into FUNC_CODE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <include refid="Selective_Column_List"/>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <include refid="Selective_Value_List"/>
    </trim>
  </insert>
  <select id="countByExample" parameterType="FuncCodeQuery" resultType="java.lang.Integer">
    select count(*) from FUNC_CODE
    <include refid="Example_Where_Clause" />
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="FuncCode">
    update FUNC_CODE
    <include refid="Example_Set_Clause"/>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="FuncCode">
    update FUNC_CODE
    <include refid="Base_Set_Clause"/>
    where ID = #{id,jdbcType=BIGINT}
  </update>
</mapper>