<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="AccountPasswordMapper">
	<resultMap id="BaseResultMap" type="AccountPassword">
	  <result column="STATUS_ID" jdbcType="VARCHAR" property="statusId" />
	  <result column="ACCT_PAWD_ID" jdbcType="INTEGER" property="acctPawdId" />
	  <result column="ROOT_INST_CD" jdbcType="VARCHAR" property="rootInstCd" />
	  <result column="USER_ID" jdbcType="VARCHAR" property="userId" />
	  <result column="PASSWORD_TYPE" jdbcType="CHAR" property="passwordType" />
	  <result column="PROSET_FLAG" jdbcType="TINYINT" property="prosetFlag" />
	  <result column="PASSWORD" jdbcType="VARCHAR" property="password" />
	  <result column="ALLOW_ERROR_COUNT" jdbcType="INTEGER" property="allowErrorCount" />
	  <result column="ERROR_COUNT" jdbcType="INTEGER" property="errorCount" />
	  <result column="REMARK" jdbcType="VARCHAR" property="remark" />
	  <result column="CREATED_TIME" jdbcType="TIMESTAMP" property="createdTime" />
	  <result column="UPDATED_TIME" jdbcType="TIMESTAMP" property="updatedTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <trim prefix="(" prefixOverrides="and" suffix=")">
      <if test="statusId != null" >
	      and STATUS_ID = #{statusId,jdbcType=VARCHAR}
	    </if>
      <if test="acctPawdId != null" >
	      and ACCT_PAWD_ID = #{acctPawdId,jdbcType=INTEGER}
	    </if>
      <if test="rootInstCd != null" >
	      and ROOT_INST_CD = #{rootInstCd,jdbcType=VARCHAR}
	    </if>
      <if test="userId != null" >
	      and USER_ID = #{userId,jdbcType=VARCHAR}
	    </if>
      <if test="passwordType != null" >
	      and PASSWORD_TYPE = #{passwordType,jdbcType=CHAR}
	    </if>
      <if test="prosetFlag != null" >
	      and PROSET_FLAG = #{prosetFlag,jdbcType=TINYINT}
	    </if>
      <if test="password != null" >
	      and PASSWORD like binary(#{password,jdbcType=VARCHAR})
	    </if>
      <if test="allowErrorCount != null" >
	      and ALLOW_ERROR_COUNT = #{allowErrorCount,jdbcType=INTEGER}
	    </if>
      <if test="errorCount != null" >
	      and ERROR_COUNT = #{errorCount,jdbcType=INTEGER}
	    </if>
      <if test="remark != null" >
	      and REMARK = #{remark,jdbcType=VARCHAR}
	    </if>
      <if test="createdTime != null" >
	      and CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP}
	    </if>
      <if test="updatedTime != null" >
	      and UPDATED_TIME = #{updatedTime,jdbcType=TIMESTAMP}
	    </if>
	  </trim>
    </where>
  </sql>
  <sql id="Example_Set_Clause">
    <set>
      <trim suffixOverrides=",">
      <if test="acctPawdId != null">
        ACCT_PAWD_ID = #{acctPawdId,jdbcType=INTEGER},
      </if>
      <if test="statusId != null">
        STATUS_ID = #{statusId,jdbcType=VARCHAR},
      </if>
      <if test="rootInstCd != null">
        ROOT_INST_CD = #{rootInstCd,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="passwordType != null">
        PASSWORD_TYPE = #{passwordType,jdbcType=CHAR},
      </if>
      <if test="prosetFlag != null">
        PROSET_FLAG = #{prosetFlag,jdbcType=TINYINT},
      </if>
      <if test="password != null">
        PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="allowErrorCount != null">
        ALLOW_ERROR_COUNT = #{allowErrorCount,jdbcType=INTEGER},
      </if>
      <if test="errorCount != null">
        ERROR_COUNT = #{errorCount,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        UPDATED_TIME = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      </trim>
    </set>
  </sql>
  <sql id="Base_Column_List">
  	STATUS_ID,
    ACCT_PAWD_ID,
    ROOT_INST_CD,
    USER_ID,
    PASSWORD_TYPE,
    PROSET_FLAG,
    PASSWORD,
    ALLOW_ERROR_COUNT,
    ERROR_COUNT,
    REMARK,
    CREATED_TIME,
    UPDATED_TIME,
  </sql>
  <sql id="Base_Set_Clause">
    <set>
      <trim suffixOverrides=",">
        ACCT_PAWD_ID = #{acctPawdId,jdbcType=INTEGER},
        STATUS_ID = #{statusId,jdbcType=VARCHAR},
        ROOT_INST_CD = #{rootInstCd,jdbcType=VARCHAR},
        USER_ID = #{userId,jdbcType=VARCHAR},
        PASSWORD_TYPE = #{passwordType,jdbcType=CHAR},
        PROSET_FLAG = #{prosetFlag,jdbcType=TINYINT},
        PASSWORD = #{password,jdbcType=VARCHAR},
        ALLOW_ERROR_COUNT = #{allowErrorCount,jdbcType=INTEGER},
        ERROR_COUNT = #{errorCount,jdbcType=INTEGER},
        REMARK = #{remark,jdbcType=VARCHAR},
        CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP},
        UPDATED_TIME = #{updatedTime,jdbcType=TIMESTAMP},
      </trim>
    </set>
  </sql>
  <sql id="Selective_Column_List">
    <if test="acctPawdId != null">
      ACCT_PAWD_ID,
    </if>
    <if test="rootInstCd != null">
      ROOT_INST_CD,
    </if>
    <if test="statusId != null">
      STATUS_ID,
    </if>
    <if test="userId != null">
      USER_ID,
    </if>
    <if test="passwordType != null">
      PASSWORD_TYPE,
    </if>
    <if test="prosetFlag != null">
      PROSET_FLAG,
    </if>
    <if test="password != null">
      PASSWORD,
    </if>
    <if test="allowErrorCount != null">
      ALLOW_ERROR_COUNT,
    </if>
    <if test="errorCount != null">
      ERROR_COUNT,
    </if>
    <if test="remark != null">
      REMARK,
    </if>
    <if test="createdTime != null">
      CREATED_TIME,
    </if>
    <if test="updatedTime != null">
      UPDATED_TIME,
    </if>
  </sql>
	<sql id="Base_Value_List">
    #{acctPawdId,jdbcType=INTEGER},
    #{rootInstCd,jdbcType=VARCHAR},
    #{statusId,jdbcType=VARCHAR},
    #{userId,jdbcType=VARCHAR},
    #{passwordType,jdbcType=CHAR},
    #{prosetFlag,jdbcType=TINYINT},
    #{password,jdbcType=VARCHAR},
    #{allowErrorCount,jdbcType=INTEGER},
    #{errorCount,jdbcType=INTEGER},
    #{remark,jdbcType=VARCHAR},
    #{createdTime,jdbcType=TIMESTAMP},
    #{updatedTime,jdbcType=TIMESTAMP},
	</sql>
  <sql id="Selective_Value_List">
    <if test="acctPawdId != null">
      #{acctPawdId,jdbcType=INTEGER},
    </if>
    <if test="rootInstCd != null">
      #{rootInstCd,jdbcType=VARCHAR},
    </if>
    <if test="statusId != null">
      #{statusId,jdbcType=VARCHAR},
    </if>
    <if test="userId != null">
      #{userId,jdbcType=VARCHAR},
    </if>
    <if test="passwordType != null">
      #{passwordType,jdbcType=CHAR},
    </if>
    <if test="prosetFlag != null">
      #{prosetFlag,jdbcType=TINYINT},
    </if>
    <if test="password != null">
      #{password,jdbcType=VARCHAR},
    </if>
    <if test="allowErrorCount != null">
      #{allowErrorCount,jdbcType=INTEGER},
    </if>
    <if test="errorCount != null">
      #{errorCount,jdbcType=INTEGER},
    </if>
    <if test="remark != null">
      #{remark,jdbcType=VARCHAR},
    </if>
    <if test="createdTime != null">
      #{createdTime,jdbcType=TIMESTAMP},
    </if>
    <if test="updatedTime != null">
      #{updatedTime,jdbcType=TIMESTAMP},
    </if>
  </sql>
  
  <select id="selectByExample" parameterType="AccountPasswordQuery" resultMap="BaseResultMap">
    select
    <trim suffixOverrides=",">
      <include refid="Base_Column_List" />
    </trim>
    from ACCOUNT_PASSWORD
    <include refid="Example_Where_Clause" />
    <!-- order by CREATE_DATE -->
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <trim suffixOverrides=",">
      <include refid="Base_Column_List" />
    </trim>
    from ACCOUNT_PASSWORD
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ACCOUNT_PASSWORD
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="AccountPasswordQuery">
    delete from ACCOUNT_PASSWORD
    <include refid="Example_Where_Clause" />
  </delete>
  <insert id="insert" parameterType="AccountPassword" useGeneratedKeys="true" keyProperty="acctPawdId">
    insert into ACCOUNT_PASSWORD
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <include refid="Base_Column_List"/>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <include refid="Base_Value_List"/>
    </trim>
  </insert>
  <insert id="insertSelective" parameterType="AccountPassword" useGeneratedKeys="true" keyProperty="acctPawdId">
    insert into ACCOUNT_PASSWORD
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <include refid="Selective_Column_List"/>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <include refid="Selective_Value_List"/>
    </trim>
  </insert>
  <select id="countByExample" parameterType="AccountPasswordQuery" resultType="java.lang.Integer">
    select count(*) from ACCOUNT_PASSWORD
    <include refid="Example_Where_Clause" />
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="AccountPassword">
    update ACCOUNT_PASSWORD
    <include refid="Example_Set_Clause"/>
    where ACCT_PAWD_ID = #{acctPawdId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="AccountPassword">
    update ACCOUNT_PASSWORD
    <include refid="Base_Set_Clause"/>
    where ACCT_PAWD_ID = #{acctPawdId,jdbcType=BIGINT}
  </update>
</mapper>