<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="AccountInfoMapper">
	<resultMap id="BaseResultMap" type="AccountInfo">
	  <result column="ACCOUNT_ID" jdbcType="INTEGER" property="accountId" />
	  <result column="FIN_ACCOUNT_ID" jdbcType="VARCHAR" property="finAccountId" />
	  <result column="ACCOUNT_NAME" jdbcType="VARCHAR" property="accountName" />
	  <result column="ACCOUNT_TYPE_ID" jdbcType="VARCHAR" property="accountTypeId" />
	  <result column="ACCOUNT_PURPOSE" jdbcType="VARCHAR" property="accountPurpose" />
	  <result column="ACCOUNT_NUMBER" jdbcType="VARCHAR" property="accountNumber" />
	  <result column="ACCOUNT_PROPERTY" jdbcType="VARCHAR" property="accountProperty" />
	  <result column="OPEN_ACCOUNT_DATE" jdbcType="TIMESTAMP" property="openAccountDate" />
	  <result column="OPEN_ACCOUNT_DESCRIPTION" jdbcType="VARCHAR" property="openAccountDescription" />
	  <result column="CURRENCY" jdbcType="VARCHAR" property="currency" />
	  <result column="STATUS" jdbcType="TINYINT" property="status" />
	  <result column="BANK_HEAD" jdbcType="VARCHAR" property="bankHead" />
	  <result column="BANK_HEAD_NAME" jdbcType="VARCHAR" property="bankHeadName" />
	  <result column="BANK_BRANCH" jdbcType="VARCHAR" property="bankBranch" />
	  <result column="BANK_BRANCH_NAME" jdbcType="VARCHAR" property="bankBranchName" />
	  <result column="BANK_PROVINCE" jdbcType="VARCHAR" property="bankProvince" />
	  <result column="BANK_CITY" jdbcType="VARCHAR" property="bankCity" />
	  <result column="CERTIFICATE_TYPE" jdbcType="VARCHAR" property="certificateType" />
	  <result column="CERTIFICATE_NUMBER" jdbcType="VARCHAR" property="certificateNumber" />
	  <result column="ACCOUNT_REAL_NAME" jdbcType="VARCHAR" property="accountRealName" />
	  <result column="CREATED_TIME" jdbcType="TIMESTAMP" property="createdTime" />
	  <result column="UPDATED_TIME" jdbcType="TIMESTAMP" property="updatedTime" />
	  <result column="ERROR_CODE" jdbcType="VARCHAR" property="errorCode" />
  </resultMap>
   <resultMap id="BaseResultMap1" type="AccountInfo">
	  <result column="ACCOUNT_ID" jdbcType="INTEGER" property="accountId" />
	  <result column="FIN_ACCOUNT_ID" jdbcType="VARCHAR" property="finAccountId" />
	  <result column="ACCOUNT_NAME" jdbcType="VARCHAR" property="accountName" />
	  <result column="ACCOUNT_TYPE_ID" jdbcType="VARCHAR" property="accountTypeId" />
	  <result column="ACCOUNT_PURPOSE" jdbcType="VARCHAR" property="accountPurpose" />
	  <result column="ACCOUNT_NUMBER" jdbcType="VARCHAR" property="accountNumber" />
	  <result column="ACCOUNT_PROPERTY" jdbcType="VARCHAR" property="accountProperty" />
	  <result column="OPEN_ACCOUNT_DATE" jdbcType="TIMESTAMP" property="openAccountDate" />
	  <result column="OPEN_ACCOUNT_DESCRIPTION" jdbcType="VARCHAR" property="openAccountDescription" />
	  <result column="CURRENCY" jdbcType="VARCHAR" property="currency" />
	  <result column="STATUS" jdbcType="TINYINT" property="status" />
	  <result column="BANK_HEAD" jdbcType="VARCHAR" property="bankHead" />
	  <result column="BANK_HEAD_NAME" jdbcType="VARCHAR" property="bankHeadName" />
	  <result column="BANK_BRANCH" jdbcType="VARCHAR" property="bankBranch" />
	  <result column="BANK_BRANCH_NAME" jdbcType="VARCHAR" property="bankBranchName" />
	  <result column="BANK_PROVINCE" jdbcType="VARCHAR" property="bankProvince" />
	  <result column="BANK_CITY" jdbcType="VARCHAR" property="bankCity" />
	  <result column="CERTIFICATE_TYPE" jdbcType="VARCHAR" property="certificateType" />
	  <result column="CERTIFICATE_NUMBER" jdbcType="VARCHAR" property="certificateNumber" />
	  <result column="ACCOUNT_REAL_NAME" jdbcType="VARCHAR" property="accountRealName" />
	  <result column="CREATED_TIME" jdbcType="TIMESTAMP" property="createdTime" />
	  <result column="UPDATED_TIME" jdbcType="TIMESTAMP" property="updatedTime" />
	  <result column="URL_LOGO" jdbcType="VARCHAR" property="urllogo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <trim prefix="(" prefixOverrides="and" suffix=")">
      <if test="accountId != null" >
	      and ACCOUNT_ID = #{accountId,jdbcType=INTEGER}
	    </if>
      <if test="finAccountId != null" >
	      and FIN_ACCOUNT_ID = #{finAccountId,jdbcType=VARCHAR}
	    </if>
      <if test="accountName != null" >
	      and ACCOUNT_NAME = #{accountName,jdbcType=VARCHAR}
	    </if>
      <if test="accountTypeId != null" >
	      and ACCOUNT_TYPE_ID = #{accountTypeId,jdbcType=VARCHAR}
	    </if>
      <if test="accountPurpose != null" >
	    <if test="accountPurpose ==1 " >
	      and ACCOUNT_PURPOSE in ('1','4')
	    </if>
	    <if test="accountPurpose ==3 " >
	      and ACCOUNT_PURPOSE in ('3','4')
	    </if>
	    <if test="accountPurpose ==4 " >
	      and ACCOUNT_PURPOSE in ('1','3','4')
	    </if>
      	<if test="accountPurpose !=1 and accountPurpose !=3 and accountPurpose !=4 " >
	      and ACCOUNT_PURPOSE = #{accountPurpose,jdbcType=VARCHAR}
	    </if>
	    </if>
      <if test="accountNumber != null" >
	      and ACCOUNT_NUMBER = #{accountNumber,jdbcType=VARCHAR}
	      
	    </if>
      <if test="accountProperty != null" >
	      and ACCOUNT_PROPERTY = #{accountProperty,jdbcType=VARCHAR}
	    </if>
      <if test="openAccountDate != null" >
	      and OPEN_ACCOUNT_DATE = #{openAccountDate,jdbcType=TIMESTAMP}
	    </if>
      <if test="openAccountDescription != null" >
	      and OPEN_ACCOUNT_DESCRIPTION = #{openAccountDescription,jdbcType=VARCHAR}
	    </if>
      <if test="currency != null" >
	      and CURRENCY = #{currency,jdbcType=VARCHAR}
	    </if>
      <if test="status != null" >
      		<if test="status != 5" >
		  		and STATUS = #{status,jdbcType=TINYINT}
		  	</if>
		  	<if test="status == 5" >
		  		and STATUS IN ('1','2','3','4')
		  	</if>
	    </if>
      <if test="bankHead != null" >
	      and BANK_HEAD = #{bankHead,jdbcType=VARCHAR}
	    </if>
      <if test="bankHeadName != null" >
	      and BANK_HEAD_NAME = #{bankHeadName,jdbcType=VARCHAR}
	    </if>
      <if test="bankBranch != null" >
	      and BANK_BRANCH = #{bankBranch,jdbcType=VARCHAR}
	    </if>
      <if test="bankBranchName != null" >
	      and BANK_BRANCH_NAME = #{bankBranchName,jdbcType=VARCHAR}
	    </if>
      <if test="bankProvince != null" >
	      and BANK_PROVINCE = #{bankProvince,jdbcType=VARCHAR}
	    </if>
      <if test="bankCity != null" >
	      and BANK_CITY = #{bankCity,jdbcType=VARCHAR}
	    </if>
      <if test="certificateType != null" >
	      and CERTIFICATE_TYPE = #{certificateType,jdbcType=VARCHAR}
	    </if>
      <if test="certificateNumber != null" >
	      and CERTIFICATE_NUMBER = #{certificateNumber,jdbcType=VARCHAR}	     
	    </if>
      <if test="accountRealName != null" >
	      and ACCOUNT_REAL_NAME = #{accountRealName,jdbcType=VARCHAR}
	    </if>
      <if test="createdTime != null" >
	      and CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP}
	    </if>
      <if test="updatedTime != null" >
	      and UPDATED_TIME = #{updatedTime,jdbcType=TIMESTAMP}
	    </if>
	  </trim>
    </where>
  </sql>
  
   <sql id="Example_Where_Clause1">
    <where>
      <trim prefix="(" prefixOverrides="and" suffix=")">
      <if test="accountId != null" >
	      and ACCOUNT_ID = #{accountId,jdbcType=INTEGER}
	    </if>
      <if test="finAccountId != null" >
	      and FIN_ACCOUNT_ID = #{finAccountId,jdbcType=VARCHAR}
	    </if>
      <if test="accountName != null" >
	      and ACCOUNT_NAME = #{accountName,jdbcType=VARCHAR}
	    </if>
      <if test="accountTypeId != null" >
	      and ACCOUNT_TYPE_ID = #{accountTypeId,jdbcType=VARCHAR}
	    </if>
      <if test="accountPurpose != null" >
	    <if test="accountPurpose ==1 " >
	      and ACCOUNT_PURPOSE = #{accountPurpose,jdbcType=VARCHAR}
	    </if>
	     <if test="accountPurpose ==2 " >
	      and ACCOUNT_PURPOSE = #{accountPurpose,jdbcType=VARCHAR}
	    </if>
	    <if test="accountPurpose ==3 " >
	      and ACCOUNT_PURPOSE = #{accountPurpose,jdbcType=VARCHAR}
	    </if>
	    <if test="accountPurpose ==4 " >
	      and ACCOUNT_PURPOSE = #{accountPurpose,jdbcType=VARCHAR}
	    </if>
      	
	    </if>
      <if test="accountNumber != null" >
	      <!--and ACCOUNT_NUMBER = #{accountNumber,jdbcType=VARCHAR}-->
	      and ACCOUNT_NUMBER like CONCAT(CONCAT('%', #{accountNumber,jdbcType=VARCHAR}), '%')
	    </if>
      <if test="accountProperty != null" >
	      and ACCOUNT_PROPERTY = #{accountProperty,jdbcType=VARCHAR}
	    </if>
      <if test="openAccountDate != null" >
	      and OPEN_ACCOUNT_DATE = #{openAccountDate,jdbcType=TIMESTAMP}
	    </if>
      <if test="openAccountDescription != null" >
	      and OPEN_ACCOUNT_DESCRIPTION = #{openAccountDescription,jdbcType=VARCHAR}
	    </if>
      <if test="currency != null" >
	      and CURRENCY = #{currency,jdbcType=VARCHAR}
	    </if>
      <if test="status != null" >
      		<if test="status != 5" >
		  		and STATUS = #{status,jdbcType=TINYINT}
		  	</if>
		  	<if test="status == 5" >
		  		and STATUS IN ('1','2','3','4')
		  	</if>
	    </if>
      <if test="bankHead != null" >
	      and BANK_HEAD = #{bankHead,jdbcType=VARCHAR}
	    </if>
      <if test="bankHeadName != null" >
	      and BANK_HEAD_NAME = #{bankHeadName,jdbcType=VARCHAR}
	    </if>
      <if test="bankBranch != null" >
	      and BANK_BRANCH = #{bankBranch,jdbcType=VARCHAR}
	    </if>
      <if test="bankBranchName != null" >
	      and BANK_BRANCH_NAME = #{bankBranchName,jdbcType=VARCHAR}
	    </if>
      <if test="bankProvince != null" >
	      and BANK_PROVINCE = #{bankProvince,jdbcType=VARCHAR}
	    </if>
      <if test="bankCity != null" >
	      and BANK_CITY = #{bankCity,jdbcType=VARCHAR}
	    </if>
      <if test="certificateType != null" >
	      and CERTIFICATE_TYPE = #{certificateType,jdbcType=VARCHAR}
	    </if>
      <if test="certificateNumber != null" >
	      <!--and CERTIFICATE_NUMBER = #{certificateNumber,jdbcType=VARCHAR}-->
	      and CERTIFICATE_NUMBER like CONCAT(CONCAT('%', #{certificateNumber,jdbcType=VARCHAR}), '%')
	    </if>
      <if test="accountRealName != null" >
	      and ACCOUNT_REAL_NAME like CONCAT(CONCAT('%', #{accountRealName,jdbcType=VARCHAR}), '%')
	    </if>
      <if test="createdTime != null" >
	      and CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP}
	    </if>
      <if test="updatedTime != null" >
	      and UPDATED_TIME = #{updatedTime,jdbcType=TIMESTAMP}
	    </if>
	    <if test="rootInstCd != null" >
	      and FINANACE_ACCOUNT.ROOT_INST_CD = #{rootInstCd,jdbcType=VARCHAR}
	    </if> 
	    <if test="createdStartTime != null and createdEndTime!=null" >
	      and (ACCOUNT_INFO.CREATED_TIME &lt;= #{createdEndTime,jdbcType=TIMESTAMP} and ACCOUNT_INFO.CREATED_TIME &gt;= #{createdStartTime,jdbcType=TIMESTAMP})
	    </if>  
	    <if test="createdStartTime != null and createdEndTime==null" >
	      and ACCOUNT_INFO.CREATED_TIME &gt;= #{createdStartTime,jdbcType=TIMESTAMP} 
	    </if> 
	     <if test="createdStartTime == null and createdEndTime!=null" >
	      and ACCOUNT_INFO.CREATED_TIME &lt;= #{createdEndTime,jdbcType=TIMESTAMP})
	    </if> 
	      <if test="openaccountStartDate != null and openaccountEndDate!=null" >
	      and (OPEN_ACCOUNT_DATE &lt;= #{openaccountEndDate,jdbcType=TIMESTAMP} and OPEN_ACCOUNT_DATE &gt;= #{openaccountStartDate,jdbcType=TIMESTAMP})
	    </if>  
	    <if test="openaccountStartDate != null and openaccountEndDate==null" >
	      and OPEN_ACCOUNT_DATE &gt;= #{openaccountStartDate,jdbcType=TIMESTAMP} 
	    </if> 
	     <if test="openaccountStartDate == null and openaccountEndDate!=null" >
	      and OPEN_ACCOUNT_DATE &lt;= #{openaccountEndDate,jdbcType=TIMESTAMP})
	    </if> 
	  </trim>
    </where>
  </sql>
  
  <sql id="Example_Set_Clause">
    <set>
      <trim suffixOverrides=",">
      <if test="accountId != null">
        ACCOUNT_ID = #{accountId,jdbcType=INTEGER},
      </if>
      <if test="finAccountId != null">
        FIN_ACCOUNT_ID = #{finAccountId,jdbcType=VARCHAR},
      </if>
      <if test="accountName != null">
        ACCOUNT_NAME = #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="accountTypeId != null">
        ACCOUNT_TYPE_ID = #{accountTypeId,jdbcType=VARCHAR},
      </if>
      <if test="accountPurpose != null">
        ACCOUNT_PURPOSE = #{accountPurpose,jdbcType=VARCHAR},
      </if>
      <if test="accountNumber != null">
        ACCOUNT_NUMBER = #{accountNumber,jdbcType=VARCHAR},
      </if>
      <if test="accountProperty != null">
        ACCOUNT_PROPERTY = #{accountProperty,jdbcType=VARCHAR},
      </if>
      <if test="openAccountDate != null">
        OPEN_ACCOUNT_DATE = #{openAccountDate,jdbcType=TIMESTAMP},
      </if>
      <if test="openAccountDescription != null">
        OPEN_ACCOUNT_DESCRIPTION = #{openAccountDescription,jdbcType=VARCHAR},
      </if>
      <if test="currency != null">
        CURRENCY = #{currency,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=TINYINT},
      </if>
      <if test="bankHead != null">
        BANK_HEAD = #{bankHead,jdbcType=VARCHAR},
      </if>
      <if test="bankHeadName != null">
        BANK_HEAD_NAME = #{bankHeadName,jdbcType=VARCHAR},
      </if>
      <if test="bankBranch != null">
        BANK_BRANCH = #{bankBranch,jdbcType=VARCHAR},
      </if>
      <if test="bankBranchName != null">
        BANK_BRANCH_NAME = #{bankBranchName,jdbcType=VARCHAR},
      </if>
      <if test="bankProvince != null">
        BANK_PROVINCE = #{bankProvince,jdbcType=VARCHAR},
      </if>
      <if test="bankCity != null">
        BANK_CITY = #{bankCity,jdbcType=VARCHAR},
      </if>
      <if test="certificateType != null">
        CERTIFICATE_TYPE = #{certificateType,jdbcType=VARCHAR},
      </if>
      <if test="certificateNumber != null">
        CERTIFICATE_NUMBER = #{certificateNumber,jdbcType=VARCHAR},
      </if>
      <if test="accountRealName != null">
        ACCOUNT_REAL_NAME = #{accountRealName,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        UPDATED_TIME = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      </trim>
    </set>
  </sql>
  <sql id="Base_Column_List">
    ACCOUNT_ID,
    FIN_ACCOUNT_ID,
    ACCOUNT_NAME,
    ACCOUNT_TYPE_ID,
    ACCOUNT_PURPOSE,
    ACCOUNT_NUMBER,
    ACCOUNT_PROPERTY,
    OPEN_ACCOUNT_DATE,
    OPEN_ACCOUNT_DESCRIPTION,
    CURRENCY,
    STATUS,
    BANK_HEAD,
    BANK_HEAD_NAME,
    BANK_BRANCH,
    BANK_BRANCH_NAME,
    BANK_PROVINCE,
    BANK_CITY,
    CERTIFICATE_TYPE,
    CERTIFICATE_NUMBER,
    ACCOUNT_REAL_NAME,
    CREATED_TIME,
    UPDATED_TIME,
  </sql>
  <sql id="Base_Set_Clause">
    <set>
      <trim suffixOverrides=",">
        ACCOUNT_ID = #{accountId,jdbcType=INTEGER},
        FIN_ACCOUNT_ID = #{finAccountId,jdbcType=VARCHAR},
        ACCOUNT_NAME = #{accountName,jdbcType=VARCHAR},
        ACCOUNT_TYPE_ID = #{accountTypeId,jdbcType=VARCHAR},
        ACCOUNT_PURPOSE = #{accountPurpose,jdbcType=VARCHAR},
        ACCOUNT_NUMBER = #{accountNumber,jdbcType=VARCHAR},
        ACCOUNT_PROPERTY = #{accountProperty,jdbcType=VARCHAR},
        OPEN_ACCOUNT_DATE = #{openAccountDate,jdbcType=TIMESTAMP},
        OPEN_ACCOUNT_DESCRIPTION = #{openAccountDescription,jdbcType=VARCHAR},
        CURRENCY = #{currency,jdbcType=VARCHAR},
        STATUS = #{status,jdbcType=TINYINT},
        BANK_HEAD = #{bankHead,jdbcType=VARCHAR},
        BANK_HEAD_NAME = #{bankHeadName,jdbcType=VARCHAR},
        BANK_BRANCH = #{bankBranch,jdbcType=VARCHAR},
        BANK_BRANCH_NAME = #{bankBranchName,jdbcType=VARCHAR},
        BANK_PROVINCE = #{bankProvince,jdbcType=VARCHAR},
        BANK_CITY = #{bankCity,jdbcType=VARCHAR},
        CERTIFICATE_TYPE = #{certificateType,jdbcType=VARCHAR},
        CERTIFICATE_NUMBER = #{certificateNumber,jdbcType=VARCHAR},
        ACCOUNT_REAL_NAME = #{accountRealName,jdbcType=VARCHAR},
        CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP},
        UPDATED_TIME = #{updatedTime,jdbcType=TIMESTAMP},
      </trim>
    </set>
  </sql>
  <sql id="Selective_Column_List">
    <if test="accountId != null">
      ACCOUNT_ID,
    </if>
    <if test="finAccountId != null">
      FIN_ACCOUNT_ID,
    </if>
    <if test="accountName != null">
      ACCOUNT_NAME,
    </if>
    <if test="accountTypeId != null">
      ACCOUNT_TYPE_ID,
    </if>
    <if test="accountPurpose != null">
      ACCOUNT_PURPOSE,
    </if>
    <if test="accountNumber != null">
      ACCOUNT_NUMBER,
    </if>
    <if test="accountProperty != null">
      ACCOUNT_PROPERTY,
    </if>
    <if test="openAccountDate != null">
      OPEN_ACCOUNT_DATE,
    </if>
    <if test="openAccountDescription != null">
      OPEN_ACCOUNT_DESCRIPTION,
    </if>
    <if test="currency != null">
      CURRENCY,
    </if>
    <if test="status != null">
      STATUS,
    </if>
    <if test="bankHead != null">
      BANK_HEAD,
    </if>
    <if test="bankHeadName != null">
      BANK_HEAD_NAME,
    </if>
    <if test="bankBranch != null">
      BANK_BRANCH,
    </if>
    <if test="bankBranchName != null">
      BANK_BRANCH_NAME,
    </if>
    <if test="bankProvince != null">
      BANK_PROVINCE,
    </if>
    <if test="bankCity != null">
      BANK_CITY,
    </if>
    <if test="certificateType != null">
      CERTIFICATE_TYPE,
    </if>
    <if test="certificateNumber != null">
      CERTIFICATE_NUMBER,
    </if>
    <if test="accountRealName != null">
      ACCOUNT_REAL_NAME,
    </if>
    <if test="createdTime != null">
      CREATED_TIME,
    </if>
    <if test="updatedTime != null">
      UPDATED_TIME,
    </if>
  </sql>
	<sql id="Base_Value_List">
    #{accountId,jdbcType=INTEGER},
    #{finAccountId,jdbcType=VARCHAR},
    #{accountName,jdbcType=VARCHAR},
    #{accountTypeId,jdbcType=VARCHAR},
    #{accountPurpose,jdbcType=VARCHAR},
    #{accountNumber,jdbcType=VARCHAR},
    #{accountProperty,jdbcType=VARCHAR},
    #{openAccountDate,jdbcType=TIMESTAMP},
    #{openAccountDescription,jdbcType=VARCHAR},
    #{currency,jdbcType=VARCHAR},
    #{status,jdbcType=TINYINT},
    #{bankHead,jdbcType=VARCHAR},
    #{bankHeadName,jdbcType=VARCHAR},
    #{bankBranch,jdbcType=VARCHAR},
    #{bankBranchName,jdbcType=VARCHAR},
    #{bankProvince,jdbcType=VARCHAR},
    #{bankCity,jdbcType=VARCHAR},
    #{certificateType,jdbcType=VARCHAR},
    #{certificateNumber,jdbcType=VARCHAR},
    #{accountRealName,jdbcType=VARCHAR},
    #{createdTime,jdbcType=TIMESTAMP},
    #{updatedTime,jdbcType=TIMESTAMP},
	</sql>
  <sql id="Selective_Value_List">
    <if test="accountId != null">
      #{accountId,jdbcType=INTEGER},
    </if>
    <if test="finAccountId != null">
      #{finAccountId,jdbcType=VARCHAR},
    </if>
    <if test="accountName != null">
      #{accountName,jdbcType=VARCHAR},
    </if>
    <if test="accountTypeId != null">
      #{accountTypeId,jdbcType=VARCHAR},
    </if>
    <if test="accountPurpose != null">
      #{accountPurpose,jdbcType=VARCHAR},
    </if>
    <if test="accountNumber != null">
      #{accountNumber,jdbcType=VARCHAR},
    </if>
    <if test="accountProperty != null">
      #{accountProperty,jdbcType=VARCHAR},
    </if>
    <if test="openAccountDate != null">
      #{openAccountDate,jdbcType=TIMESTAMP},
    </if>
    <if test="openAccountDescription != null">
      #{openAccountDescription,jdbcType=VARCHAR},
    </if>
    <if test="currency != null">
      #{currency,jdbcType=VARCHAR},
    </if>
    <if test="status != null">
      #{status,jdbcType=TINYINT},
    </if>
    <if test="bankHead != null">
      #{bankHead,jdbcType=VARCHAR},
    </if>
    <if test="bankHeadName != null">
      #{bankHeadName,jdbcType=VARCHAR},
    </if>
    <if test="bankBranch != null">
      #{bankBranch,jdbcType=VARCHAR},
    </if>
    <if test="bankBranchName != null">
      #{bankBranchName,jdbcType=VARCHAR},
    </if>
    <if test="bankProvince != null">
      #{bankProvince,jdbcType=VARCHAR},
    </if>
    <if test="bankCity != null">
      #{bankCity,jdbcType=VARCHAR},
    </if>
    <if test="certificateType != null">
      #{certificateType,jdbcType=VARCHAR},
    </if>
    <if test="certificateNumber != null">
      #{certificateNumber,jdbcType=VARCHAR},
    </if>
    <if test="accountRealName != null">
      #{accountRealName,jdbcType=VARCHAR},
    </if>
    <if test="createdTime != null">
      #{createdTime,jdbcType=TIMESTAMP},
    </if>
    <if test="updatedTime != null">
      #{updatedTime,jdbcType=TIMESTAMP},
    </if>
  </sql>
  
  
  <select id="selectByExample" parameterType="AccountInfoQuery" resultMap="BaseResultMap">
    select
    <trim suffixOverrides=",">
      <include refid="Base_Column_List" />
    </trim>
    from ACCOUNT_INFO
    <include refid="Example_Where_Clause" />
    <!-- order by CREATE_DATE -->
  </select>
  <select id="selectByNumAndConstId" parameterType="AccountInfoQuery" resultMap="BaseResultMap">
    SELECT * from ACCOUNT_INFO a 
    LEFT JOIN FINANACE_ACCOUNT f 
    on a.FIN_ACCOUNT_ID=f.FIN_ACCOUNT_ID 
    where f.ROOT_INST_CD = #{rootInstCd,jdbcType=VARCHAR} 
    AND a.ACCOUNT_NUMBER=#{accountNumber,jdbcType=VARCHAR} 
    <if test="status != null" >
		<if test="status != 5" >
		      and a.STATUS = #{status,jdbcType=TINYINT}
		</if>
		<if test="status ==5" >
		      and a.STATUS IN ('1','2','3','4')
		</if>
	</if>
  </select>
  <select id="selectViewByUserIdAndPurpose" parameterType="AccountInfoQuery" resultMap="BaseResultMap">
  SELECT FINANACE_ACCOUNT.ROOT_INST_CD,ACCOUNT_INFO.ACCOUNT_ID, ACCOUNT_INFO.FIN_ACCOUNT_ID, ACCOUNT_INFO.ACCOUNT_NAME, ACCOUNT_INFO.ACCOUNT_TYPE_ID, 
  ACCOUNT_INFO.ACCOUNT_NUMBER, ACCOUNT_INFO.OPEN_ACCOUNT_DATE, ACCOUNT_INFO.OPEN_ACCOUNT_DESCRIPTION, ACCOUNT_INFO.CURRENCY, 
  ACCOUNT_INFO.BANK_HEAD, ACCOUNT_INFO.BANK_HEAD_NAME, ACCOUNT_INFO.BANK_BRANCH, ACCOUNT_INFO.BANK_BRANCH_NAME, 
  ACCOUNT_INFO.BANK_PROVINCE, ACCOUNT_INFO.BANK_CITY, ACCOUNT_INFO.ACCOUNT_PURPOSE,ACCOUNT_INFO.ACCOUNT_PROPERTY,ACCOUNT_INFO.ACCOUNT_REAL_NAME
FROM  ACCOUNT_INFO INNER JOIN FINANACE_ACCOUNT ON ACCOUNT_INFO.FIN_ACCOUNT_ID = FINANACE_ACCOUNT.FIN_ACCOUNT_ID   AND ACCOUNT_INFO.STATUS in (1,3)
WHERE  (FINANACE_ACCOUNT.ROOT_INST_CD=#{rootInstCd}) and (ACCOUNT_INFO.ACCOUNT_NAME = #{accountName}) AND (ACCOUNT_INFO.ACCOUNT_PURPOSE = #{accountPurpose})
  </select>
  <!--获取绑卡信息列表-->
  <select id="selectBankCard" parameterType="AccountInfoQuery" resultMap="BaseResultMap">
   SELECT
	ACCOUNT_INFO.ACCOUNT_ID,
	ACCOUNT_INFO.FIN_ACCOUNT_ID,
	ACCOUNT_INFO.ACCOUNT_NAME,
	ACCOUNT_INFO.ACCOUNT_TYPE_ID,
	ACCOUNT_INFO.ACCOUNT_PURPOSE,
	ACCOUNT_INFO.ACCOUNT_NUMBER,
	ACCOUNT_INFO.ACCOUNT_PROPERTY,
	ACCOUNT_INFO.OPEN_ACCOUNT_DATE,
	ACCOUNT_INFO.OPEN_ACCOUNT_DESCRIPTION,
	ACCOUNT_INFO.CURRENCY,
	ACCOUNT_INFO.`STATUS`,
	ACCOUNT_INFO.BANK_HEAD,
	ACCOUNT_INFO.BANK_HEAD_NAME,
	ACCOUNT_INFO.BANK_BRANCH,
	ACCOUNT_INFO.BANK_BRANCH_NAME,
	ACCOUNT_INFO.BANK_PROVINCE,
	ACCOUNT_INFO.BANK_CITY,
	ACCOUNT_INFO.CERTIFICATE_TYPE,
	ACCOUNT_INFO.CERTIFICATE_NUMBER,
	ACCOUNT_INFO.ACCOUNT_REAL_NAME,
	ACCOUNT_INFO.CREATED_TIME,
	ACCOUNT_INFO.UPDATED_TIME,
	TEMP.ERROR_CODE
	FROM
	FINANACE_ACCOUNT
	INNER JOIN ACCOUNT_INFO ON ACCOUNT_INFO.FIN_ACCOUNT_ID = FINANACE_ACCOUNT.FIN_ACCOUNT_ID
	LEFT JOIN (SELECT MAX(UPDATED_TIME),ERROR_CODE,ROOT_INST_CD,ACCOUNT_NO
	           FROM GENERATION_PAYMENT_HISTORY
	           WHERE ACCOUNT_PROPERTY = '1'
	           GROUP BY ACCOUNT_NO) TEMP 
    ON TEMP.ACCOUNT_NO = ACCOUNT_INFO.ACCOUNT_NUMBER
    AND TEMP.ROOT_INST_CD = FINANACE_ACCOUNT.ROOT_INST_CD
  	<include refid="Example_Where_Clause1" />
	 order by ACCOUNT_INFO.CREATED_TIME;
	 </select>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <trim suffixOverrides=",">
      <include refid="Base_Column_List" />
    </trim>
    from ACCOUNT_INFO
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ACCOUNT_INFO
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="AccountInfoQuery">
    delete from ACCOUNT_INFO
    <include refid="Example_Where_Clause" />
  </delete>
  <insert id="insert" parameterType="AccountInfo">
    insert into ACCOUNT_INFO
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <include refid="Base_Column_List"/>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <include refid="Base_Value_List"/>
    </trim>
  </insert>
  <insert id="insertSelective" parameterType="AccountInfo">
    insert into ACCOUNT_INFO
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <include refid="Selective_Column_List"/>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <include refid="Selective_Value_List"/>
    </trim>
  </insert>
  <select id="countByExample" parameterType="AccountInfoQuery" resultType="java.lang.Integer">
    select count(*) from ACCOUNT_INFO
    <include refid="Example_Where_Clause" />
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="AccountInfo">
    update ACCOUNT_INFO
    <include refid="Example_Set_Clause"/>
    where ACCOUNT_ID = #{accountId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="AccountInfo">
    update ACCOUNT_INFO
    <include refid="Base_Set_Clause"/>
    where ACCOUNT_ID = #{accountId,jdbcType=BIGINT}
  </update>
  
  <update id="updateByOnecent" parameterType="Map" >
	UPDATE ACCOUNT_INFO A
		SET A.STATUS=#{status}
		WHERE A.ACCOUNT_NUMBER=#{accountnumber}
		AND A.FIN_ACCOUNT_ID=(
		SELECT B.FIN_ACCOUNT_ID FROM(
		
		SELECT ACC.FIN_ACCOUNT_ID
		FROM  ACCOUNT_INFO ACC ,FINANACE_ACCOUNT F
		WHERE F.FIN_ACCOUNT_ID=ACC.FIN_ACCOUNT_ID
		AND ACC.ACCOUNT_PROPERTY=1
		AND ACC.STATUS=3
		AND F.ROOT_INST_CD=#{rootinstcd}
		AND ACC.ACCOUNT_NUMBER=#{accountnumber}
		) B
		
	)
        
  </update>
  
  <select id="queryoneCent" parameterType="AccountInfoQuery" resultMap="BaseResultMap">
      SELECT FINANACE_ACCOUNT.ROOT_INST_CD,ACCOUNT_INFO.ACCOUNT_ID, ACCOUNT_INFO.FIN_ACCOUNT_ID, ACCOUNT_INFO.ACCOUNT_NAME, ACCOUNT_INFO.ACCOUNT_TYPE_ID, 
  ACCOUNT_INFO.ACCOUNT_NUMBER, ACCOUNT_INFO.OPEN_ACCOUNT_DATE, ACCOUNT_INFO.OPEN_ACCOUNT_DESCRIPTION, ACCOUNT_INFO.CURRENCY, 
  ACCOUNT_INFO.BANK_HEAD, ACCOUNT_INFO.BANK_HEAD_NAME, ACCOUNT_INFO.BANK_BRANCH, ACCOUNT_INFO.BANK_BRANCH_NAME,ACCOUNT_INFO.STATUS, 
  ACCOUNT_INFO.BANK_PROVINCE, ACCOUNT_INFO.BANK_CITY, ACCOUNT_INFO.ACCOUNT_PURPOSE,ACCOUNT_INFO.ACCOUNT_PROPERTY,ACCOUNT_INFO.ACCOUNT_REAL_NAME
FROM  ACCOUNT_INFO INNER JOIN FINANACE_ACCOUNT ON ACCOUNT_INFO.FIN_ACCOUNT_ID = FINANACE_ACCOUNT.FIN_ACCOUNT_ID
		WHERE 
		 ACCOUNT_INFO.ACCOUNT_PROPERTY=#{accountProperty,jdbcType=VARCHAR}
		AND ACCOUNT_INFO.STATUS=#{status,jdbcType=TINYINT}
		AND FINANACE_ACCOUNT.STATUS_ID='1'
  </select>
  
  <select id="selectByExamplePlus" parameterType="AccountInfoQuery" resultMap="BaseResultMap1">
    select
    ai.ACCOUNT_ID,
    ai.FIN_ACCOUNT_ID,
    ai.ACCOUNT_NAME,
    ai.ACCOUNT_TYPE_ID,
    ai.ACCOUNT_PURPOSE,
    ai.ACCOUNT_NUMBER,
    ai.ACCOUNT_PROPERTY,
    ai.OPEN_ACCOUNT_DATE,
    ai.OPEN_ACCOUNT_DESCRIPTION,
    ai.CURRENCY,
    ai.STATUS,
    ai.BANK_HEAD,
    ai.BANK_HEAD_NAME,
    ai.BANK_BRANCH,
    ai.BANK_BRANCH_NAME,
    ai.BANK_PROVINCE,
    ai.BANK_CITY,
    ai.CERTIFICATE_TYPE,
    ai.CERTIFICATE_NUMBER,
    ai.ACCOUNT_REAL_NAME,
    tbc.URL_LOGO,
    ai.CREATED_TIME,
    ai.UPDATED_TIME
    from ACCOUNT_INFO ai
    LEFT JOIN TL_BANK_CODE tbc on ai.BANK_HEAD = tbc.BANK_CODE
    <include refid="Example_Where_Clause" />
    <!-- order by CREATE_DATE -->
  </select>
  
</mapper>