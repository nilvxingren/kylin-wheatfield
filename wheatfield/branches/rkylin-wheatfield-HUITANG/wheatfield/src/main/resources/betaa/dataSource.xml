<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd"
    default-autowire="byName" default-lazy-init="true">
	
  
  <context:property-placeholder location="classpath:betaa/db.properties" ignore-unresolvable="true" />  
	<!-- 配置数据源 -->
	<bean id="accountDataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${database.driverClassName}" />
		<property name="url" value="${database.url}" />
		<property name="username" value="${database.username}" />
		<property name="password" value="${database.password}" />
		<property name="maxActive">
			<value>200</value>
		</property>
		<property name="initialSize">
			<value>100</value>
		</property>
		<property name="maxWait">
			<value>60000</value>
		</property>
		<property name="maxIdle">
			<value>200</value>
		</property>
		<property name="minIdle">
			<value>50</value>
		</property>
		<!-- <property name="removeAbandoned">
			<value>true</value>
		</property>
		<property name="removeAbandonedTimeout">
			<value>30</value>
		</property>  -->
		<property name="testWhileIdle">
			<value>true</value>
		</property>
		<property name="testOnBorrow">
			<value>true</value>
		</property>
		<property name="testOnReturn">
			<value>false</value>
		</property>
		<property name="validationQuery">
			<value>select 1 from dual</value>
		</property>
		<property name="numTestsPerEvictionRun">
			<value>50</value>
		</property>
		<property name="minEvictableIdleTimeMillis">
			<value>1800000</value>
		</property>
		<property name="timeBetweenEvictionRunsMillis">
		    <value>10000</value>
		</property> 
	</bean>

	<!-- 整合mybatis -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="accountDataSource" />
		<property name="configLocation" value="classpath:mybatisConfig.xml" />
	</bean>
	
	<bean class="com.rkylin.database.BaseDao">
		<property name="batchSqlSessionFactory" ref="sqlSessionFactory" />
	</bean>

	

<!-- 	配置事务管理 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource">
			<ref local="accountDataSource" />
		</property>
	</bean>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"
		p:dataSource-ref="accountDataSource" />

	<bean id="txTemplate"
		class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager" ref="txManager" />
	</bean>

		<tx:annotation-driven transaction-manager="txManager" proxy-target-class="true"/>
	
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="delete*" propagation="NESTED" rollback-for="Exception.class" read-only="false"/>
      		<tx:method name="insert*" propagation="NESTED" rollback-for="Exception.class"  read-only="false"/>
      		<tx:method name="update*" propagation="NESTED" rollback-for="Exception.class" read-only="false"/>
      		<tx:method name="save*" propagation="NESTED" rollback-for="Exception.class" read-only="false"/>
      
      		<tx:method name="find*" propagation="SUPPORTS"/>
	        <tx:method name="get*" propagation="SUPPORTS"/>
	        <tx:method name="select*" propagation="SUPPORTS"/>
		</tx:attributes>
 	</tx:advice>
 	
 	 <aop:config>    
      <aop:pointcut id="point-cut"  expression= "execution(* com.rkylin.wheatfield.service.impl.*.*(..))" />
      <aop:advisor advice-ref="txAdvice"  pointcut-ref= "point-cut" />    
    </aop:config>
 	<aop:aspectj-autoproxy expose-proxy="true"/> 
</beans>