<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="TlBankCodeMapper">
	<resultMap id="BaseResultMap" type="TlBankCode">
	  <result column="BANK_ID" jdbcType="INTEGER" property="bankId" />
	  <result column="BANK_CODE" jdbcType="VARCHAR" property="bankCode" />
	  <result column="BANK_NAME" jdbcType="VARCHAR" property="bankName" />
	  <result column="UPDATE_BATCH" jdbcType="VARCHAR" property="updateBatch" />
	  <result column="STATUS_ID" jdbcType="TINYINT" property="statusId" />
	  <result column="CREATED_TIME" jdbcType="TIMESTAMP" property="createdTime" />
	  <result column="UPDATED_TIME" jdbcType="TIMESTAMP" property="updatedTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <trim prefix="(" prefixOverrides="and" suffix=")">
      <if test="bankId != null" >
	      and BANK_ID = #{bankId,jdbcType=INTEGER}
	    </if>
      <if test="bankCode != null" >
	      and BANK_CODE = #{bankCode,jdbcType=VARCHAR}
	    </if>
      <if test="bankName != null" >
	      and BANK_NAME = #{bankName,jdbcType=VARCHAR}
	    </if>
      <if test="updateBatch != null" >
	      and UPDATE_BATCH = #{updateBatch,jdbcType=VARCHAR}
	    </if>
      <if test="statusId != null" >
	      and STATUS_ID = #{statusId,jdbcType=TINYINT}
	    </if>
      <if test="createdTime != null" >
	      and CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP}
	    </if>
      <if test="updatedTime != null" >
	      and UPDATED_TIME = #{updatedTime,jdbcType=TIMESTAMP}
	    </if>
	  </trim>
    </where>
  </sql>
  <sql id="Example_Set_Clause">
    <set>
      <trim suffixOverrides=",">
      <if test="bankId != null">
        BANK_ID = #{bankId,jdbcType=INTEGER},
      </if>
      <if test="bankCode != null">
        BANK_CODE = #{bankCode,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null">
        BANK_NAME = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="updateBatch != null">
        UPDATE_BATCH = #{updateBatch,jdbcType=VARCHAR},
      </if>
      <if test="statusId != null">
        STATUS_ID = #{statusId,jdbcType=TINYINT},
      </if>
      <if test="createdTime != null">
        CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        UPDATED_TIME = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      </trim>
    </set>
  </sql>
  <sql id="Base_Column_List">
    BANK_ID,
    BANK_CODE,
    BANK_NAME,
    UPDATE_BATCH,
    STATUS_ID,
    CREATED_TIME,
    UPDATED_TIME,
  </sql>
  <sql id="Base_Set_Clause">
    <set>
      <trim suffixOverrides=",">
        BANK_ID = #{bankId,jdbcType=INTEGER},
        BANK_CODE = #{bankCode,jdbcType=VARCHAR},
        BANK_NAME = #{bankName,jdbcType=VARCHAR},
        UPDATE_BATCH = #{updateBatch,jdbcType=VARCHAR},
        STATUS_ID = #{statusId,jdbcType=TINYINT},
        CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP},
        UPDATED_TIME = #{updatedTime,jdbcType=TIMESTAMP},
      </trim>
    </set>
  </sql>
  <sql id="Selective_Column_List">
    <if test="bankId != null">
      BANK_ID,
    </if>
    <if test="bankCode != null">
      BANK_CODE,
    </if>
    <if test="bankName != null">
      BANK_NAME,
    </if>
    <if test="updateBatch != null">
      UPDATE_BATCH,
    </if>
    <if test="statusId != null">
      STATUS_ID,
    </if>
    <if test="createdTime != null">
      CREATED_TIME,
    </if>
    <if test="updatedTime != null">
      UPDATED_TIME,
    </if>
  </sql>
	<sql id="Base_Value_List">
    #{bankId,jdbcType=INTEGER},
    #{bankCode,jdbcType=VARCHAR},
    #{bankName,jdbcType=VARCHAR},
    #{updateBatch,jdbcType=VARCHAR},
    #{statusId,jdbcType=TINYINT},
    #{createdTime,jdbcType=TIMESTAMP},
    #{updatedTime,jdbcType=TIMESTAMP},
	</sql>
  <sql id="Selective_Value_List">
    <if test="bankId != null">
      #{bankId,jdbcType=INTEGER},
    </if>
    <if test="bankCode != null">
      #{bankCode,jdbcType=VARCHAR},
    </if>
    <if test="bankName != null">
      #{bankName,jdbcType=VARCHAR},
    </if>
    <if test="updateBatch != null">
      #{updateBatch,jdbcType=VARCHAR},
    </if>
    <if test="statusId != null">
      #{statusId,jdbcType=TINYINT},
    </if>
    <if test="createdTime != null">
      #{createdTime,jdbcType=TIMESTAMP},
    </if>
    <if test="updatedTime != null">
      #{updatedTime,jdbcType=TIMESTAMP},
    </if>
  </sql>
  
  <select id="selectByExample" parameterType="TlBankCodeQuery" resultMap="BaseResultMap">
    select
    	BANK_CODE,
    BANK_NAME
<!--     <trim suffixOverrides=","> -->
<!--       <include refid="Base_Column_List" /> -->
<!--     </trim> -->
    from TL_BANK_CODE
    <include refid="Example_Where_Clause" />
    <!-- order by CREATE_DATE -->
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <trim suffixOverrides=",">
      <include refid="Base_Column_List" />
    </trim>
    from TL_BANK_CODE
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from TL_BANK_CODE
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="TlBankCodeQuery">
    delete from TL_BANK_CODE
    <include refid="Example_Where_Clause" />
  </delete>
  <insert id="insert" parameterType="TlBankCode">
    insert into TL_BANK_CODE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <include refid="Base_Column_List"/>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <include refid="Base_Value_List"/>
    </trim>
  </insert>
  <insert id="insertSelective" parameterType="TlBankCode">
    insert into TL_BANK_CODE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <include refid="Selective_Column_List"/>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <include refid="Selective_Value_List"/>
    </trim>
  </insert>
  <select id="countByExample" parameterType="TlBankCodeQuery" resultType="java.lang.Integer">
    select count(*) from TL_BANK_CODE
    <include refid="Example_Where_Clause" />
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="TlBankCode">
    update TL_BANK_CODE
    <include refid="Example_Set_Clause"/>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="TlBankCode">
    update TL_BANK_CODE
    <include refid="Base_Set_Clause"/>
    where ID = #{id,jdbcType=BIGINT}
  </update>
</mapper>