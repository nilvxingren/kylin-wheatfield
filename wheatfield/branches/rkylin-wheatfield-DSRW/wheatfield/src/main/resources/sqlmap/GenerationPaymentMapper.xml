<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="GenerationPaymentMapper">
	<resultMap id="BaseResultMap" type="GenerationPayment">
		<result column="GENE_ID" jdbcType="BIGINT" property="geneId" />
		<result column="REQUEST_NO" jdbcType="VARCHAR" property="requestNo" />
		<result column="BUSSINESS_CODE" jdbcType="VARCHAR" property="bussinessCode" />
		<result column="ROOT_INST_CD" jdbcType="VARCHAR" property="rootInstCd" />
		<result column="ORDER_NO" jdbcType="VARCHAR" property="orderNo" />
		<result column="ORDER_TYPE" jdbcType="TINYINT" property="orderType" />
		<result column="GENE_SEQ" jdbcType="VARCHAR" property="geneSeq" />
		<result column="USER_ID" jdbcType="VARCHAR" property="userId" />
		<result column="BANK_CODE" jdbcType="VARCHAR" property="bankCode" />
		<result column="ACCOUNT_TYPE" jdbcType="VARCHAR" property="accountType" />
		<result column="ACCOUNT_NO" jdbcType="VARCHAR" property="accountNo" />
		<result column="ACCOUNT_NAME" jdbcType="VARCHAR" property="accountName" />
		<result column="ACCOUNT_PROPERTY" jdbcType="VARCHAR" property="accountProperty" />
		<result column="PROVINCE" jdbcType="VARCHAR" property="province" />
		<result column="CITY" jdbcType="VARCHAR" property="city" />
		<result column="OPEN_BANK_NAME" jdbcType="VARCHAR" property="openBankName" />
		<result column="PAY_BANK_CODE" jdbcType="VARCHAR" property="payBankCode" />
		<result column="AMOUNT" jdbcType="DECIMAL" property="amount" />
		<result column="CURRENCY" jdbcType="VARCHAR" property="currency" />
		<result column="CERTIFICATE_TYPE" jdbcType="VARCHAR" property="certificateType" />
		<result column="CERTIFICATE_NUMBER" jdbcType="VARCHAR"
			property="certificateNumber" />
		<result column="PROCESS_RESULT" jdbcType="VARCHAR" property="processResult" />
		<result column="SEND_TYPE" jdbcType="TINYINT" property="sendType" />
		<result column="ERROR_CODE" jdbcType="VARCHAR" property="errorCode" />
		<result column="STATUS_ID" jdbcType="TINYINT" property="statusId" />
		<result column="ACCOUNT_DATE" jdbcType="TIMESTAMP" property="accountDate" />
		<result column="REMARK" jdbcType="VARCHAR" property="remark" />
		<result column="CREATED_TIME" jdbcType="TIMESTAMP" property="createdTime" />
		<result column="UPDATED_TIME" jdbcType="TIMESTAMP" property="updatedTime" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<trim prefix="(" prefixOverrides="and" suffix=")">
				<if test="geneId != null">
					and GENE_ID = #{geneId,jdbcType=BIGINT}
				</if>
				<if test="requestNo != null">
					and REQUEST_NO = #{requestNo,jdbcType=VARCHAR}
				</if>
				<if test="bussinessCode != null">
					and BUSSINESS_CODE = #{bussinessCode,jdbcType=VARCHAR}
				</if>
				<if test="rootInstCd != null">
					and ROOT_INST_CD = #{rootInstCd,jdbcType=VARCHAR}
				</if>
				<if test="orderNo != null">
					and ORDER_NO = #{orderNo,jdbcType=VARCHAR}
				</if>
				<if test="orderType != null">
					<if test="orderType != 9 ">
						and ORDER_TYPE = #{orderType,jdbcType=TINYINT}
					</if>
					<if test="orderType == 9 ">
						and ORDER_TYPE in (2,5,6)
					</if>
				</if>
				<if test="geneSeq != null">
					and GENE_SEQ = #{geneSeq,jdbcType=VARCHAR}
				</if>
				<if test="userId != null">
					and USER_ID = #{userId,jdbcType=VARCHAR}
				</if>
				<if test="bankCode != null">
					and BANK_CODE = #{bankCode,jdbcType=VARCHAR}
				</if>
				<if test="accountType != null">
					and ACCOUNT_TYPE = #{accountType,jdbcType=VARCHAR}
				</if>
				<if test="accountNo != null">
					and ACCOUNT_NO = #{accountNo,jdbcType=VARCHAR}
				</if>
				<if test="accountName != null">
					and ACCOUNT_NAME = #{accountName,jdbcType=VARCHAR}
				</if>
				<if test="accountProperty != null">
					and ACCOUNT_PROPERTY =
					#{accountProperty,jdbcType=VARCHAR}
				</if>
				<if test="province != null">
					and PROVINCE = #{province,jdbcType=VARCHAR}
				</if>
				<if test="city != null">
					and CITY = #{city,jdbcType=VARCHAR}
				</if>
				<if test="openBankName != null">
					and OPEN_BANK_NAME = #{openBankName,jdbcType=VARCHAR}
				</if>
				<if test="payBankCode != null">
					and PAY_BANK_CODE = #{payBankCode,jdbcType=VARCHAR}
				</if>
				<if test="amount != null">
					and AMOUNT = #{amount,jdbcType=DECIMAL}
				</if>
				<if test="currency != null">
					and CURRENCY = #{currency,jdbcType=VARCHAR}
				</if>
				<if test="certificateType != null">
					and CERTIFICATE_TYPE =
					#{certificateType,jdbcType=VARCHAR}
				</if>
				<if test="certificateNumber != null">
					and CERTIFICATE_NUMBER =
					#{certificateNumber,jdbcType=VARCHAR}
				</if>
				<if test="processResult != null">
					and PROCESS_RESULT = #{processResult,jdbcType=VARCHAR}
				</if>
				<if test="sendType != null">
					<if test="sendType != 9 ">
						and SEND_TYPE = #{sendType,jdbcType=TINYINT}
					</if>
					<if test="sendType == 9 ">
						and SEND_TYPE in (0,1)
					</if>
				</if>
				<if test="errorCode != null">
					and ERROR_CODE = #{errorCode,jdbcType=VARCHAR}
				</if>
				<if test="statusId != null">
					and STATUS_ID = #{statusId,jdbcType=TINYINT}
				</if>
				<if test="accountDate != null">
					and ACCOUNT_DATE = #{accountDate,jdbcType=TIMESTAMP}
				</if>
				<if test="remark != null">
					and REMARK = #{remark,jdbcType=VARCHAR}
				</if>
				<if test="createdTime != null">
					and CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP}
				</if>
				<if test="updatedTime != null">
					and UPDATED_TIME = #{updatedTime,jdbcType=TIMESTAMP}
				</if>
			</trim>
		</where>
	</sql>
	<sql id="Example_Set_Clause">
		<set>
			<trim suffixOverrides=",">
				<if test="geneId != null">
					GENE_ID = #{geneId,jdbcType=BIGINT},
				</if>
				<if test="requestNo != null">
					REQUEST_NO = #{requestNo,jdbcType=VARCHAR},
				</if>
				<if test="bussinessCode != null">
					BUSSINESS_CODE = #{bussinessCode,jdbcType=VARCHAR},
				</if>
				<if test="rootInstCd != null">
					ROOT_INST_CD = #{rootInstCd,jdbcType=VARCHAR},
				</if>
				<if test="orderNo != null">
					ORDER_NO = #{orderNo,jdbcType=VARCHAR},
				</if>
				<if test="orderType != null">
					ORDER_TYPE = #{orderType,jdbcType=TINYINT},
				</if>
				<if test="geneSeq != null">
					GENE_SEQ = #{geneSeq,jdbcType=VARCHAR},
				</if>
				<if test="userId != null">
					USER_ID = #{userId,jdbcType=VARCHAR},
				</if>
				<if test="bankCode != null">
					BANK_CODE = #{bankCode,jdbcType=VARCHAR},
				</if>
				<if test="accountType != null">
					ACCOUNT_TYPE = #{accountType,jdbcType=VARCHAR},
				</if>
				<if test="accountNo != null">
					ACCOUNT_NO = #{accountNo,jdbcType=VARCHAR},
				</if>
				<if test="accountName != null">
					ACCOUNT_NAME = #{accountName,jdbcType=VARCHAR},
				</if>
				<if test="accountProperty != null">
					ACCOUNT_PROPERTY = #{accountProperty,jdbcType=VARCHAR},
				</if>
				<if test="province != null">
					PROVINCE = #{province,jdbcType=VARCHAR},
				</if>
				<if test="city != null">
					CITY = #{city,jdbcType=VARCHAR},
				</if>
				<if test="openBankName != null">
					OPEN_BANK_NAME = #{openBankName,jdbcType=VARCHAR},
				</if>
				<if test="payBankCode != null">
					PAY_BANK_CODE = #{payBankCode,jdbcType=VARCHAR},
				</if>
				<if test="amount != null">
					AMOUNT = #{amount,jdbcType=DECIMAL},
				</if>
				<if test="currency != null">
					CURRENCY = #{currency,jdbcType=VARCHAR},
				</if>
				<if test="certificateType != null">
					CERTIFICATE_TYPE = #{certificateType,jdbcType=VARCHAR},
				</if>
				<if test="certificateNumber != null">
					CERTIFICATE_NUMBER =
					#{certificateNumber,jdbcType=VARCHAR},
				</if>
				<if test="processResult != null">
					PROCESS_RESULT = #{processResult,jdbcType=VARCHAR},
				</if>
				<if test="sendType != null">
					SEND_TYPE = #{sendType,jdbcType=TINYINT},
				</if>
				<if test="errorCode != null">
					ERROR_CODE = #{errorCode,jdbcType=VARCHAR},
				</if>
				<if test="statusId != null">
					STATUS_ID = #{statusId,jdbcType=TINYINT},
				</if>
				<if test="accountDate != null">
					ACCOUNT_DATE = #{accountDate,jdbcType=TIMESTAMP},
				</if>
				<if test="remark != null">
					REMARK = #{remark,jdbcType=VARCHAR},
				</if>
				<if test="createdTime != null">
					CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP},
				</if>
				<if test="updatedTime != null">
					UPDATED_TIME = #{updatedTime,jdbcType=TIMESTAMP},
				</if>
			</trim>
		</set>
	</sql>
	<sql id="Base_Column_List">
		GENE_ID,
		REQUEST_NO,
		BUSSINESS_CODE,
		ROOT_INST_CD,
		ORDER_NO,
		ORDER_TYPE,
		GENE_SEQ,
		USER_ID,
		BANK_CODE,
		ACCOUNT_TYPE,
		ACCOUNT_NO,
		ACCOUNT_NAME,
		ACCOUNT_PROPERTY,
		PROVINCE,
		CITY,
		OPEN_BANK_NAME,
		PAY_BANK_CODE,
		AMOUNT,
		CURRENCY,
		CERTIFICATE_TYPE,
		CERTIFICATE_NUMBER,
		PROCESS_RESULT,
		SEND_TYPE,
		ERROR_CODE,
		STATUS_ID,
		ACCOUNT_DATE,
		REMARK,
		CREATED_TIME,
		UPDATED_TIME,
	</sql>
	<sql id="Base_Set_Clause">
		<set>
			<trim suffixOverrides=",">
				GENE_ID = #{geneId,jdbcType=BIGINT},
				REQUEST_NO = #{requestNo,jdbcType=VARCHAR},
				BUSSINESS_CODE =
				#{bussinessCode,jdbcType=VARCHAR},
				ROOT_INST_CD =
				#{rootInstCd,jdbcType=VARCHAR},
				ORDER_NO =
				#{orderNo,jdbcType=VARCHAR},
				ORDER_TYPE =
				#{orderType,jdbcType=TINYINT},
				GENE_SEQ =
				#{geneSeq,jdbcType=VARCHAR},
				USER_ID = #{userId,jdbcType=VARCHAR},
				BANK_CODE = #{bankCode,jdbcType=VARCHAR},
				ACCOUNT_TYPE =
				#{accountType,jdbcType=VARCHAR},
				ACCOUNT_NO =
				#{accountNo,jdbcType=VARCHAR},
				ACCOUNT_NAME =
				#{accountName,jdbcType=VARCHAR},
				ACCOUNT_PROPERTY =
				#{accountProperty,jdbcType=VARCHAR},
				PROVINCE =
				#{province,jdbcType=VARCHAR},
				CITY = #{city,jdbcType=VARCHAR},
				OPEN_BANK_NAME = #{openBankName,jdbcType=VARCHAR},
				PAY_BANK_CODE =
				#{payBankCode,jdbcType=VARCHAR},
				AMOUNT = #{amount,jdbcType=DECIMAL},
				CURRENCY = #{currency,jdbcType=VARCHAR},
				CERTIFICATE_TYPE =
				#{certificateType,jdbcType=VARCHAR},
				CERTIFICATE_NUMBER =
				#{certificateNumber,jdbcType=VARCHAR},
				PROCESS_RESULT =
				#{processResult,jdbcType=VARCHAR},
				SEND_TYPE =
				#{sendType,jdbcType=TINYINT},
				ERROR_CODE =
				#{errorCode,jdbcType=VARCHAR},
				STATUS_ID =
				#{statusId,jdbcType=TINYINT},
				ACCOUNT_DATE =
				#{accountDate,jdbcType=TIMESTAMP},
				REMARK =
				#{remark,jdbcType=VARCHAR},
				CREATED_TIME =
				#{createdTime,jdbcType=TIMESTAMP},
				UPDATED_TIME =
				#{updatedTime,jdbcType=TIMESTAMP},
			</trim>
		</set>
	</sql>
	<sql id="Selective_Column_List">
		<if test="geneId != null">
			GENE_ID,
		</if>
		<if test="requestNo != null">
			REQUEST_NO,
		</if>
		<if test="bussinessCode != null">
			BUSSINESS_CODE,
		</if>
		<if test="rootInstCd != null">
			ROOT_INST_CD,
		</if>
		<if test="orderNo != null">
			ORDER_NO,
		</if>
		<if test="orderType != null">
			ORDER_TYPE,
		</if>
		<if test="geneSeq != null">
			GENE_SEQ,
		</if>
		<if test="userId != null">
			USER_ID,
		</if>
		<if test="bankCode != null">
			BANK_CODE,
		</if>
		<if test="accountType != null">
			ACCOUNT_TYPE,
		</if>
		<if test="accountNo != null">
			ACCOUNT_NO,
		</if>
		<if test="accountName != null">
			ACCOUNT_NAME,
		</if>
		<if test="accountProperty != null">
			ACCOUNT_PROPERTY,
		</if>
		<if test="province != null">
			PROVINCE,
		</if>
		<if test="city != null">
			CITY,
		</if>
		<if test="openBankName != null">
			OPEN_BANK_NAME,
		</if>
		<if test="payBankCode != null">
			PAY_BANK_CODE,
		</if>
		<if test="amount != null">
			AMOUNT,
		</if>
		<if test="currency != null">
			CURRENCY,
		</if>
		<if test="certificateType != null">
			CERTIFICATE_TYPE,
		</if>
		<if test="certificateNumber != null">
			CERTIFICATE_NUMBER,
		</if>
		<if test="processResult != null">
			PROCESS_RESULT,
		</if>
		<if test="sendType != null">
			SEND_TYPE,
		</if>
		<if test="errorCode != null">
			ERROR_CODE,
		</if>
		<if test="statusId != null">
			STATUS_ID,
		</if>
		<if test="accountDate != null">
			ACCOUNT_DATE,
		</if>
		<if test="remark != null">
			REMARK,
		</if>
		<if test="createdTime != null">
			CREATED_TIME,
		</if>
		<if test="updatedTime != null">
			UPDATED_TIME,
		</if>
	</sql>
	<sql id="Base_Value_List">
		#{geneId,jdbcType=BIGINT},
		#{requestNo,jdbcType=VARCHAR},
		#{bussinessCode,jdbcType=VARCHAR},
		#{rootInstCd,jdbcType=VARCHAR},
		#{orderNo,jdbcType=VARCHAR},
		#{orderType,jdbcType=TINYINT},
		#{geneSeq,jdbcType=VARCHAR},
		#{userId,jdbcType=VARCHAR},
		#{bankCode,jdbcType=VARCHAR},
		#{accountType,jdbcType=VARCHAR},
		#{accountNo,jdbcType=VARCHAR},
		#{accountName,jdbcType=VARCHAR},
		#{accountProperty,jdbcType=VARCHAR},
		#{province,jdbcType=VARCHAR},
		#{city,jdbcType=VARCHAR},
		#{openBankName,jdbcType=VARCHAR},
		#{payBankCode,jdbcType=VARCHAR},
		#{amount,jdbcType=DECIMAL},
		#{currency,jdbcType=VARCHAR},
		#{certificateType,jdbcType=VARCHAR},
		#{certificateNumber,jdbcType=VARCHAR},
		#{processResult,jdbcType=VARCHAR},
		#{sendType,jdbcType=TINYINT},
		#{errorCode,jdbcType=VARCHAR},
		#{statusId,jdbcType=TINYINT},
		#{accountDate,jdbcType=TIMESTAMP},
		#{remark,jdbcType=VARCHAR},
		#{createdTime,jdbcType=TIMESTAMP},
		#{updatedTime,jdbcType=TIMESTAMP},
	</sql>
	<sql id="Selective_Value_List">
		<if test="geneId != null">
			#{geneId,jdbcType=BIGINT},
		</if>
		<if test="requestNo != null">
			#{requestNo,jdbcType=VARCHAR},
		</if>
		<if test="bussinessCode != null">
			#{bussinessCode,jdbcType=VARCHAR},
		</if>
		<if test="rootInstCd != null">
			#{rootInstCd,jdbcType=VARCHAR},
		</if>
		<if test="orderNo != null">
			#{orderNo,jdbcType=VARCHAR},
		</if>
		<if test="orderType != null">
			#{orderType,jdbcType=TINYINT},
		</if>
		<if test="geneSeq != null">
			#{geneSeq,jdbcType=VARCHAR},
		</if>
		<if test="userId != null">
			#{userId,jdbcType=VARCHAR},
		</if>
		<if test="bankCode != null">
			#{bankCode,jdbcType=VARCHAR},
		</if>
		<if test="accountType != null">
			#{accountType,jdbcType=VARCHAR},
		</if>
		<if test="accountNo != null">
			#{accountNo,jdbcType=VARCHAR},
		</if>
		<if test="accountName != null">
			#{accountName,jdbcType=VARCHAR},
		</if>
		<if test="accountProperty != null">
			#{accountProperty,jdbcType=VARCHAR},
		</if>
		<if test="province != null">
			#{province,jdbcType=VARCHAR},
		</if>
		<if test="city != null">
			#{city,jdbcType=VARCHAR},
		</if>
		<if test="openBankName != null">
			#{openBankName,jdbcType=VARCHAR},
		</if>
		<if test="payBankCode != null">
			#{payBankCode,jdbcType=VARCHAR},
		</if>
		<if test="amount != null">
			#{amount,jdbcType=DECIMAL},
		</if>
		<if test="currency != null">
			#{currency,jdbcType=VARCHAR},
		</if>
		<if test="certificateType != null">
			#{certificateType,jdbcType=VARCHAR},
		</if>
		<if test="certificateNumber != null">
			#{certificateNumber,jdbcType=VARCHAR},
		</if>
		<if test="processResult != null">
			#{processResult,jdbcType=VARCHAR},
		</if>
		<if test="sendType != null">
			#{sendType,jdbcType=TINYINT},
		</if>
		<if test="errorCode != null">
			#{errorCode,jdbcType=VARCHAR},
		</if>
		<if test="statusId != null">
			#{statusId,jdbcType=TINYINT},
		</if>
		<if test="accountDate != null">
			#{accountDate,jdbcType=TIMESTAMP},
		</if>
		<if test="remark != null">
			#{remark,jdbcType=VARCHAR},
		</if>
		<if test="createdTime != null">
			#{createdTime,jdbcType=TIMESTAMP},
		</if>
		<if test="updatedTime != null">
			#{updatedTime,jdbcType=TIMESTAMP},
		</if>
	</sql>
	<sql id="ByOrderType_Where_Clause">
		<where>
			<trim prefix="(" prefixOverrides="and" suffix=")">
				<if test="rootInstCd != null">
					and ROOT_INST_CD = #{rootInstCd,jdbcType=VARCHAR}
				</if>
				<if test="orderType == 6">
					and ORDER_TYPE in ('1','3','5','7')
				</if>
				<if test="orderType == 7">
					and ORDER_TYPE in ('2','6')
				</if>
				<if test="remark != null">
					and REMARK = #{remark,jdbcType=VARCHAR} 
				</if>
				and SEND_TYPE is NULL
				<if test="statusId != null">
					and STATUS_ID = #{statusId,jdbcType=TINYINT}
				</if>
				<if test="accountDate != null">
					and ACCOUNT_DATE = #{accountDate,jdbcType=TIMESTAMP}
				</if>
			</trim>
		</where>
	</sql>
	<select id="selectByOrderType" parameterType="GenerationPaymentQuery"
		resultMap="BaseResultMap">
		select
		<trim suffixOverrides=",">
			<include refid="Base_Column_List" />
		</trim>
		from GENERATION_PAYMENT
		<include refid="ByOrderType_Where_Clause" />
		<!-- order by CREATE_DATE -->
	</select>
	<select id="selectByOrderNoAndBatch" resultMap="BaseResultMap">
		select
		<trim suffixOverrides=",">
			<include refid="Base_Column_List" />
		</trim>
		from GENERATION_PAYMENT
		where 1=1
		<if test="orderNoArray != null">
			and ORDER_NO in
			<foreach item="item" index="index" collection="orderNoArray" open="("
				separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="batch != null and batch != '' ">
			and PROCESS_RESULT = #{batch,jdbcType=VARCHAR}
		</if>
	</select>
	<select id="selectByOrderNo" resultMap="BaseResultMap">
		select
		<trim suffixOverrides=",">
			<include refid="Base_Column_List" />
		</trim>
		from GENERATION_PAYMENT
		where ORDER_NO in
		<foreach item="item" index="index" collection="array" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</select>
	<select id="selectByExample" parameterType="GenerationPaymentQuery"
		resultMap="BaseResultMap">
		select
		<trim suffixOverrides=",">
			<include refid="Base_Column_List" />
		</trim>
		from GENERATION_PAYMENT
		<include refid="Example_Where_Clause" />
		<!-- order by CREATE_DATE -->
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select
		<trim suffixOverrides=",">
			<include refid="Base_Column_List" />
		</trim>
		from GENERATION_PAYMENT
		where ID = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from
		GENERATION_PAYMENT
		where ID = #{id,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample" parameterType="GenerationPaymentQuery">
		delete from GENERATION_PAYMENT
		<include refid="Example_Where_Clause" />
	</delete>
	<insert id="insert" parameterType="GenerationPayment">
		insert into GENERATION_PAYMENT
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<include refid="Base_Column_List" />
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<include refid="Base_Value_List" />
		</trim>
	</insert>

	<insert id="insertBatch" parameterType="java.util.List">
		insert into GENERATION_PAYMENT
		(REQUEST_NO,
		BUSSINESS_CODE,
		ROOT_INST_CD,
		ORDER_NO,
		ORDER_TYPE,
		GENE_SEQ,
		USER_ID,
		BANK_CODE,
		ACCOUNT_TYPE,
		ACCOUNT_NO,
		ACCOUNT_NAME,
		ACCOUNT_PROPERTY,
		PROVINCE,
		CITY,
		OPEN_BANK_NAME,
		PAY_BANK_CODE,
		AMOUNT,
		CURRENCY,
		CERTIFICATE_TYPE,
		CERTIFICATE_NUMBER,
		PROCESS_RESULT,
		SEND_TYPE,
		ERROR_CODE,
		STATUS_ID,
		ACCOUNT_DATE,
		REMARK)
		values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(#{item.requestNo,jdbcType=VARCHAR},
			#{item.bussinessCode,jdbcType=VARCHAR},
			#{item.rootInstCd,jdbcType=VARCHAR},
			#{item.orderNo,jdbcType=VARCHAR},
			#{item.orderType,jdbcType=TINYINT},
			#{item.geneSeq,jdbcType=VARCHAR},
			#{item.userId,jdbcType=VARCHAR},
			#{item.bankCode,jdbcType=VARCHAR},
			#{item.accountType,jdbcType=VARCHAR},
			#{item.accountNo,jdbcType=VARCHAR},
			#{item.accountName,jdbcType=VARCHAR},
			#{item.accountProperty,jdbcType=VARCHAR},
			#{item.province,jdbcType=VARCHAR},
			#{item.city,jdbcType=VARCHAR},
			#{item.openBankName,jdbcType=VARCHAR},
			#{item.payBankCode,jdbcType=VARCHAR},
			#{item.amount,jdbcType=DECIMAL},
			#{item.currency,jdbcType=VARCHAR},
			#{item.certificateType,jdbcType=VARCHAR},
			#{item.certificateNumber,jdbcType=VARCHAR},
			#{item.processResult,jdbcType=VARCHAR},
			#{item.sendType,jdbcType=TINYINT},
			#{item.errorCode,jdbcType=VARCHAR},
			#{item.statusId,jdbcType=TINYINT},
			#{item.accountDate,jdbcType=TIMESTAMP},
			#{item.remark,jdbcType=VARCHAR})
		</foreach>
	</insert>
	<insert id="insertSelective" parameterType="GenerationPayment">
		insert into GENERATION_PAYMENT
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<include refid="Selective_Column_List" />
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<include refid="Selective_Value_List" />
		</trim>
	</insert>
	<select id="countByExample" parameterType="GenerationPaymentQuery"
		resultType="java.lang.Integer">
		select count(*) from GENERATION_PAYMENT
		<include refid="Example_Where_Clause" />
	</select>
	<update id="updateByPrimaryKeySelective" parameterType="GenerationPayment">
		update GENERATION_PAYMENT
		<include refid="Example_Set_Clause" />
		where GENE_ID =#{geneId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="GenerationPayment">
		update GENERATION_PAYMENT
		<include refid="Base_Set_Clause" />
		where GENE_ID =#{geneId,jdbcType=INTEGER}
	</update>
	<update id="updateByOrderNoRootInstCdSelective" parameterType="GenerationPayment">
		update GENERATION_PAYMENT
		<include refid="Example_Set_Clause" />
		where ORDER_NO = #{orderNo,jdbcType=VARCHAR}
	</update>
</mapper>
